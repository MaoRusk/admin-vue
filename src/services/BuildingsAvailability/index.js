import httpClient from '../../plugins/axios'

export default {
  getAvailableBuildings(buildingId) {
    return httpClient.get(`/buildings/${buildingId}/availability`)
  },
  getAvailableBuilding(buildingAvailableId, buildingId) {
    return httpClient.get(`/buildings/${buildingId}/availability/${buildingAvailableId}`)
  },
  createAvailableBuilding(
    buildingId,
    {
      building_id,
      broker_id,
      avl_size_sf,
      avl_building_dimensions,
      avl_minimum_space_sf,
      avl_expansion_up_to_sf,
      dock_doors,
      drive_in_door,
      floor_thickness,
      floor_resistance,
      truck_court,
      has_crossdock,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      knockouts_docks,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      building_state,
      avl_building_phase,
    },
  ) {
    return httpClient.post(`/buildings/${buildingId}/availability`, {
      building_id,
      broker_id,
      avl_size_sf,
      avl_building_dimensions,
      avl_minimum_space_sf,
      avl_expansion_up_to_sf,
      dock_doors,
      drive_in_door,
      floor_thickness,
      floor_resistance,
      truck_court,
      has_crossdock,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      knockouts_docks,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      building_state,
      avl_building_phase,
    })
  },
  updateAvailableBuilding(
    buildingAvailableId,
    buildingId,
    {
      building_id,
      broker_id,
      avl_size_sf,
      avl_building_dimensions,
      avl_minimum_space_sf,
      avl_expansion_up_to_sf,
      dock_doors,
      drive_in_door,
      floor_thickness,
      floor_resistance,
      truck_court,
      has_crossdock,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      knockouts_docks,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      building_state,
      avl_building_phase,
    },
  ) {
    return httpClient.put(`/buildings/${buildingId}/availability/${buildingAvailableId}`, {
      building_id,
      broker_id,
      avl_size_sf,
      avl_building_dimensions,
      avl_minimum_space_sf,
      avl_expansion_up_to_sf,
      dock_doors,
      drive_in_door,
      floor_thickness,
      floor_resistance,
      truck_court,
      has_crossdock,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      knockouts_docks,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      building_state,
      avl_building_phase,
    })
  },
  deleteAvailableBuilding(buildingAvailableId, buildingId) {
    return httpClient.delete(`/buildings/${buildingId}/availability/${buildingAvailableId}`)
  },
}
