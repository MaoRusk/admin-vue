import httpClient from '../../plugins/axios'

export default {
  getAvailableBuildings(buildingId, query, filters = {}, sorter = {}) {
    return httpClient.get(`/buildings/${buildingId}/availability`, {
      params: {
        page: query?.page || null,
        size: query?.size || null,
        search: query?.search || null,
        ...filters,
        ...sorter,
      },
    })
  },
  getAvailableBuilding(buildingAvailableId, buildingId) {
    return httpClient.get(`/buildings/${buildingId}/availability/${buildingAvailableId}`)
  },
  createAvailableBuilding(
    buildingId,
    {
      broker_id,
      avl_minimum_space_sf,
      dock_doors,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      avl_building_phase,
      size_sf,
      avl_building_dimensions_ft,
      truck_court_ft,
      rams,
      trailer_parking_space,
      fire_protection_system,
      above_market_tis,
      sqftToM2,
    },
  ) {
    return httpClient.post(`/buildings/${buildingId}/availability`, {
      building_id: buildingId,
      broker_id,
      avl_minimum_space_sf,
      dock_doors,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      avl_building_phase,
      size_sf,
      avl_building_dimensions_ft,
      truck_court_ft,
      rams,
      trailer_parking_space,
      fire_protection_system,
      above_market_tis,
      sqftToM2,
    })
  },
  updateAvailableBuilding(
    buildingAvailableId,
    buildingId,
    {
      building_id,
      broker_id,
      avl_minimum_space_sf,
      dock_doors,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      avl_building_phase,
      size_sf,
      avl_building_dimensions_ft,
      truck_court_ft,
      rams,
      trailer_parking_space,
      fire_protection_system,
      above_market_tis,
      sqftToM2,
    },
  ) {
    return httpClient.put(`/buildings/${buildingId}/availability/${buildingAvailableId}`, {
      building_id,
      broker_id,
      avl_minimum_space_sf,
      dock_doors,
      shared_truck,
      new_construction,
      is_starting_construction,
      bay_size,
      columns_spacing,
      avl_date,
      parking_space,
      avl_min_lease,
      avl_max_lease,
      avl_building_phase,
      size_sf,
      avl_building_dimensions_ft,
      truck_court_ft,
      rams,
      trailer_parking_space,
      fire_protection_system,
      above_market_tis,
      sqftToM2,
    })
  },
  deleteAvailableBuilding(buildingAvailableId, buildingId) {
    return httpClient.delete(`/buildings/${buildingId}/availability/${buildingAvailableId}`)
  },
}
